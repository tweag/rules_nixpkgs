name: Continuous integration
on: [push]
jobs:
  test-nixpkgs:
    name: Build & Test - Nixpkgs
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-10.15] # TODO: this job does not yet work on more recent macOS (macos-11)
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2.4.0
      - uses: cachix/install-nix-action@v16
        with:
          nix_path: nixpkgs=./nixpkgs.nix
      - name: Configure
        env:
          BUILDBUDDY_API_KEY: ${{ secrets.BUILDBUDDY_API_KEY }}
        run: |
          cat >.bazelrc.local <<EOF
          common --config=ci
          build --remote_header=x-buildbuddy-api-key="$BUILDBUDDY_API_KEY"
          EOF
      - name: Build & test
        run: |
          nix-shell --pure --run '
            set -euo pipefail
            bazel test //...
          '
  test-examples:
    name: Build & Test - Examples
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest] # TODO: this job does not yet work on any version of macOS
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2.4.0
      - uses: cachix/install-nix-action@v16
        with:
          nix_path: nixpkgs=./nixpkgs.nix
      - name: Configure
        env:
          BUILDBUDDY_API_KEY: ${{ secrets.BUILDBUDDY_API_KEY }}
        run: |
          cat >.bazelrc.local <<EOF
          common --config=ci
          build --remote_header=x-buildbuddy-api-key="$BUILDBUDDY_API_KEY"
          EOF
      - name: Build & test
        run: |
          cd examples/toolchains
          for dir in *; do
              cd "$dir"
              echo
              echo Running $(head -n1 README.md) with Nix
              nix-shell --command 'bazel run --config=nix :hello'
              # TODO: all toolchains should run without Nixpkgs
              cd ..
          done
          for dir in cc go; do
              cd "$dir"
              echo
              echo Running $(head -n1 README.md) without Nix
              bazel run :hello
              cd ..
          done
